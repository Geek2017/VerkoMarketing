var subscriptionModule = (function() {
	var num_of_retries = 0;
	var config = {},
	checkForSubscriptionHolder = function (holderID) {
		var holder = document.getElementById(holderID);
		if (holder === null) {
			return false;
		} else {
			return true;
		}
	},
	EmailValidator = {
		RExp: /^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i,
		checkEmail: function (inputVal) {
			return this.RExp.test(inputVal);
		}
	},
	bindUIActions = function() {
		config.inputElem.jqe.on('keyup', function () {
			var currentVal = $.trim($(this).val());
			if(EmailValidator.checkEmail(currentVal)) {
				if(config.inputElem.getState() !== 2) {
					config.inputElem.updateClass('pass');
					config.inputElem.setState(2);
				}
			} else {
				if(config.inputElem.getState() !== 0) {
					config.inputElem.updateClass('reset');
					config.inputElem.setState(0);
				}
			}
		});

		config.holder.on('submit' , function (event) {
			event.preventDefault();
			if ( config.inputElem.getState() !== 2 ) {
				config.inputElem.updateClass('fail');
				config.inputElem.setState(1);
			} else {
				//input is valid - ga event fires
				if(typeof(ga)!=="undefined"){
					var place = ( typeof(location)!=='undefined' && typeof(location.href)!=='undefined' )?location.href:'undefined';
					ga("send","event","Email","Email Subscribed",place);
					ga(function() {
                        var formData = $('#subscriptionMarketto').serialize();
                        $('#subscriptionMarkettoEmail').prop('disabled', true);
						$('#errMsg').empty();
                        $('#subscriptionMarkettoEmailBtn').replaceWith('<img id="subscriptionMarkettoEmailBtn" width="50" height="50" src="/wp-content/themes/aag-2018/img/loading.gif" />');
                        $.ajax({
                            type: 'POST',
                            url: '/svc/email-subscribe.php',
                            data: formData,
                            dataType: 'json',
                            success: function(data){
								if (data.success) {
									$('#subscriptionMarkettoInputs').html('<div style="float:left;padding-left:2rem;color:#07669B;font-weight:bold;">Thank you for subscribing! A confirmation email is on its way. Please check your spam folder just in case.</div>');
								} else {
									if (num_of_retries < 3) {
										num_of_retries++;
                                        $('#subscriptionMarkettoEmail').prop('disabled', false);
										$('#subscriptionMarkettoEmailBtn').replaceWith('<button id="subscriptionMarkettoEmailBtn" type="submit" class="btn col-lg-3 mb-2">Subscribe</button>');
										$('#errMsg').html(data.msg);
									} else {
										$('#subscriptionMarkettoInputs').html('<div style="float:left;padding-left:2rem;color:#FA0F2B;font-weight:bold;">Please refresh the page and try again.</div>');
									}
								}
                            },
                            error: function(data){
                                $('#subscriptionMarkettoInputs').html('<div style="float:left;padding-left:2rem;color:#FA0F2B;font-weight:bold;">Error! Please refresh the page and try again.</div>');
                            },
                        });
					});
				}
			}
		});
	},
	init = function(subHolder, inputElementId) {
		//check if we have a holder for the subscription
		if (!checkForSubscriptionHolder(subHolder)) {
			console.log('debug: no element found for id string passed to init - 1st parameter');
			return false;
		}

		//setup config
		config.holder = $('#'+subHolder);
		config.inputElem = {
			jqe: $('#'+inputElementId),
			state: 0,/* 0 = reset, 1 = fail, 2 = pass */
			getState: function () { return this.state},
			setState: function (newState) { this.state = newState },
			updateClass: function (state) {
				//reset classes on the input element
				config.inputElem.jqe.removeClass('pass');
				config.inputElem.jqe.removeClass('error');
				//set the new class state
				if(state === 'pass') {
					config.inputElem.jqe.addClass('pass');
				} else if(state === 'fail') {
					config.inputElem.jqe.addClass('error');
				}
			}
		};

		//buindUIActions
		bindUIActions();
	};
	//interface
	return {
		init: init
	};
})();

subscriptionModule.init('subscriptionMarketto', 'subscriptionMarkettoEmail');
